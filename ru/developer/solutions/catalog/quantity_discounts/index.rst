*******************************
Оптовые скидки в списке товаров
*******************************


.. contents:: Содержание
    :local: 
    :depth: 3


Описание
--------

Стандартная функциональность
============================

Платформа CS-Cart и Multi-Vendor имеет очень полезный функционал — «Оптовые скидки» (см. :ref:`catalog-quantity-discounts`).

Вы можете задать особые цены на ваши товары при оптовой покупке или для определённых групп покупателей.

Оптовые скидки автоматически применяются при добавлении товара в корзину.

В стандартной функциональности оптовые скидки отображаются в аккуратной таблице на детальной странице товара (карточке товара).


.. fancybox:: img/qty_disq_23.png
    :alt: Оптовые скидки

.. fancybox:: img/qty_disq_24.png
    :alt: Оптовые скидки


Что будем делать
================

По умолчанию оптовые скидки не отображаются на странице списка товаров (странице категории). Покупатель узнает о наличии оптовых скидок, только когда зайдёт на карточку товара. 

Мы сделаем так, чтобы оптовые скидки отображались и на странице списка товаров.

.. list-table::
    :header-rows: 1
    :widths: 30 30

    *   -   Было

        -   Стало

    *   -   .. fancybox:: img/qty_disq_21.png
                :alt: Отображение опций товаров

        -   .. fancybox:: img/qty_disq_20.png
                :alt: Отображение опций товаров


Анализ
======

В CS-Cart обработка и отображении информации разделены. Любая информация которую мы видим в браузере была:

1.  Обработана, подготовлена и передана на отображение с помощью контроллера — специального PHP скрипта. 

2.  Отображена с помощью шаблона. 

Соответственно нам нужно найти:

1.  PHP функцию которая подготовила информацию об оптовых скидках для товара.

2.  Шаблон который отобразил информацию.

С чего начать?

Наша задача отобразить оптовые скидки на странице списка товаров. Оптовые скидки отображаются в карточке товара, изучим как это происходит и сделаем тоже самое со списком товаров.

Не интересен процесс? Переходите к финалу: :ref:`qty-disc-final`

Найдём контроллер страницы товара
---------------------------------

Всё начинается с контроллера. 

1.  Откройте страницу товара на витрине.

    .. fancybox:: img/qty_disq_03.png
        :alt: Оптовые скидки

2.  Смотрим на URL в адресной строке браузера. 

    URL: ``ваш_домен/index.php?dispatch=products.view&product_id=12``

    .. note:: 

        Включен модуль SEO? Выключайте! Живой магазин? Делайте копию для экспериментов на поддомене.

    Нас интересует параметр ``dispatch=products.view`` в URL.

    В данном случае:

    ``products`` — это название контроллера который обрабатывает данную страницу.

3.  Все контроллеры витрины находятся в папке:

    ``/app/controllers/frontend``

4.  Мы определили по URL, что нам нужен контроллер ``products``. 

    Открываем файл ``/app/controllers/frontend/products.php``

5.  Вставляем ``fn_print_r('Test');`` где нибудь в начале файла контроллера.

    .. literalinclude:: files/controller_products_1.php
        :emphasize-lines: 4
        :linenos:
        :language: php

    Перезагружаем страницу товара в браузере. Должно отобразится слово ``Test`` в левом верхнем углу.

    .. fancybox:: img/qty_disq_04.png
        :alt: Оптовые скидки    

6.  Отлично, контроллер найден. Однако тут много кода, какой нам нужен? 

    Снова смотрим на параметр ``dispatch=products.view`` в URL.

    Нас интересует часть после точки — ``view`` . 

    Так обозначается режим (mode) контроллера — секция кода, которая отвечает за данную страницу. (см. :doc:`О контроллерах </developer/core/controllers/index>`)

    Значит нам нужно найти блок с условием — ``$mode == 'view'`` 

7.  Находим с помощью поиска по файлу блок с нужным условием и вставляем ``fn_print_r('Test mode');`` в него для проверки.

    .. literalinclude:: files/controller_products_2.php
        :emphasize-lines: 6
        :linenos:
        :language: php

    Проверяем в браузере. Должны появится слова ``Test mode``

8.  Изучаем код. Практически сразу видим предположительное появление информации о товаре. 

    Добавляем ``fn_print_r($product);` чтобы распечатать на экран переменную ``$product`` которая появляется в результате работы функции ``fn_get_product_data``

    .. literalinclude:: files/controller_products_3.php
        :emphasize-lines: 4
        :linenos:
        :language: php

    Смотрим результат в браузере и видим массив с данными о товаре и об оптовых скидках в ячейке ``['prices']``:

    .. fancybox:: img/qty_disq_05.png
        :alt: Оптовые скидки

9.  Если мы проследим за дальнейшими действиями над массивом ``$product`` в контроллере, то увидим:

    .. literalinclude:: files/controller_products_4.php
        :emphasize-lines: 2
        :linenos:
        :language: php

    Данная строка передаёт массив с данными о товаре ``$product`` на отображение в шаблоны. 


Находим нужную функцию
----------------------

Мы нашли контроллер и функцию, которая получает данные об оптовых скидках. 

Заглянем внутрь функции ``fn_get_product_data`` . Данная функция получает много данные о товаре по ``product_id``, однако нам нужны только данные об оптовых скидках для страницы категории. 

Скорее всего внутри функции ``fn_get_product_data`` есть небольшая функция для получения только оптовых скидок. 
1.  Все основные функции контроллеров платформы расположены в папке:

    ``/app/functions`` 

    Файлы с функциями имеют название соответствующее области работы.

    Мы работаем с каталогом, значит нам нужен файл: ``fn.catalog.php`` .

2.  Открываем ``/app/functions/fn.catalog.php`` и ищем функцию ``fn_get_product_data``.

    .. literalinclude:: files/controller_products_5.php
        :emphasize-lines: 11, 17
        :linenos:
        :language: php

3.  Смотрим параметры передаваемые в функцию. 

    Очень интересен параметр ``$get_qty_discounts`` . По смыслу — то что нужно, он должен включать или выключать получение оптовых цен для товара. 

4.  Находим код, который выполняется для параметра ``$get_qty_discounts``.

    .. literalinclude:: files/controller_products_6.php
        :emphasize-lines: 3
        :linenos:
        :language: php

5.  Мы нашли конечную функцию ``fn_get_product_prices``, которая получает данные об оптовых скидках для товара. Проверим:

    .. literalinclude:: files/controller_products_7.php
        :emphasize-lines: 3,5
        :linenos:
        :language: php

    Первый ``fn_print_r`` пустой, а второй уже содержит информацию о скидках.

    Результат:

    .. fancybox:: img/qty_disq_06.png
        :alt: Оптовые скидки

Переходим к странице списка товаров
-----------------------------------

Мы нашли функцию которая нам нужна. Наша цель отобразить оптовые скидки на странице списка товаров. Найдём и изучим контроллер целевой страницы:

1.  Открываем страницу списка товаров (страницу категории).

    .. fancybox:: img/qty_disq_21.png
        :alt: Оптовые скидки

2.  Смотрим URL в браузере, чтобы определить контроллер.

    .. image:: img/qty_disq_08.png
        :alt: Оптовые скидки

    Нам по прежнему важен параметр ``dispatch=categories.view`` , где:

    *   Контроллер — ``categories``

    *   Режим (mode) — ``view``

3.  Открываем файл:

    ``app/controllers/frontend/categories.php``

4.  Находим раздел с ``$mode == 'view'`` и вставим функцию ``fn_print_r('Test Cat');`` для проверки.

    .. literalinclude:: files/controller_categories_1.php
        :emphasize-lines: 4
        :linenos:

    Перезагрузим страницу в браузере, чтобы проверить. Если увидите ``Test Cat`` , то вы там где нужно. 

    .. image:: img/qty_disq_09.png
        :alt: Оптовые скидки

5.  Ищем по смыслу функцию, которая получает информацию о товарах. Можно просто перебирать переменные с помощью ``fn_print_r()``.

    После недолгого поиска, находится ``fn_get_products``, которая создаёт массив с товарами ``$products``:

    .. literalinclude:: files/controller_categories_2.php
        :emphasize-lines: 2
        :linenos:

    Распечатаем ``$products``.

    .. image:: img/qty_disq_10.png
        :alt: Оптовые скидки  

6.  Изучаем массив данных и не находим информации об оптовых скидках. Идём дальше по коду контроллера **categories.php**.

    Находим функцию ``fn_gather_additional_products_data`` , данная функция получает дополнительную информацию о товарах. Судя по параметрам, есть подозрение, что она может получать оптовые скидки.

    .. literalinclude:: files/controller_categories_2.php
        :emphasize-lines: 2,7,11
        :linenos:

    Распечатываем ``$products`` после функции и изучаем массив с данными. 

    К сожалению, информации о оптовых скидках не появилось. У функции есть параметр ``'get_discounts' => true,`` , судя по названию, он связан со скидками. Зайдём и посмотрим.

7.  Зайдём и изучим функцию ``fn_gather_additional_products_data``. 

    Функция находится в файле ``/app/functions/fn.catalog.php``.

    Находим код отрабатывающий по параметру: ``'get_discounts' => true,``

    .. literalinclude:: files/controller_categories_4.php
        :emphasize-lines: 5
        :linenos:

    К сожалению, функции в данном условии отвечают за получение скидок по «Промо-акциям» для каталога.

    Данная функция не получает информацию об оптовых скидках. 

    Однако в данной функции есть много хуков и возможно нам они понадобятся. 

    Хуки в php выглядят так.

    .. literalinclude:: files/controller_categories_5.php
        :linenos:

    Хуки позволяют подключить и выполнить свой php код, используя данные переданные в хук.

8.  Возвращаемся в контроллер **categories.php** и идём дальше по коду.

    Доходим до строки, которая передаёт данные о товарах в Smarty шаблон на отображение. Дальше информация о товаре не будет расширятся.

    Распечатаем переменную ``$products`` перед передачей её на отображение

    .. literalinclude:: files/controller_categories_6.php
        :linenos:

    Просмотрим результат в браузере и в очередной раз убедимся, что нет информации об оптовых скидках. 

    .. fancybox:: img/qty_disq_11.png
        :alt: Оптовые скидки

9.  Будем добавлять.

.. _qty-disc-final:

Получим информацию о скидках для страницы списка товаров
--------------------------------------------------------

Мы изучили контроллер **categories.php**, отвечающий за информацию для страницы списка товаров, и не нашли информации о скидках. 

Значит нам нужно её добавить.

Мы нашли функцию ``fn_get_product_prices`` которая по id товара сможет получить информацию о скидках.

Мы нашли хуки в одной из функций которые выполняет контроллер **categories.php**.

Подключимся к хуку и расширим данные товаров информацией о скидках.

Расширять будем с помощью модуля «Мои изменения».

1.  Рассмотрим хук из функции ``fn_gather_additional_products_data``.

    .. literalinclude:: files/controller_categories_5.php
        :linenos:

    Первый аргумент функции ``fn_set_hook`` соответствует названию хука.

    Последующие аргументы ``$product``, ``$auth``, ``$params`` соответствуют данным которые будут доступны для модификации в хуке.

2.  Для подключения к хуку, хук необходимо инициализировать.

    Создайте новый файл:

    ``/app/addons/my_changes/init.php``

    Вставьте код для инициализации хука:

    .. literalinclude:: files/hook_connect.php
        :linenos:    

    Мы передали названия хука в функцию ``fn_register_hooks`` , можно инициализировать сколько угодно хуков, передавая через запятую. Посмотрети в других модулях.

3.  Чтобы выполнить свой php код в хуке, создайте файл:

    ``/app/addons/my_changes/func.php``

    Создайте в данном файле новую функцию с названием вида:

    ``fn_[идентификатор_модуля]_[название_хука]`` 

    В качестве аргументов функции используйте переменные передаваемые в хук.

    .. literalinclude:: files/hook_connect_1.php
        :linenos:    

4.  Включите модуль «Мои изменения» и проверьте подключение к хуку.

    .. fancybox:: img/qty_disq_12.png
        :alt: Оптовые скидки

    Вы должны увидеть распечатанные идентификаторы товаров, потому что хук к которому мы подключаемся выполняется в цикле по всем товарам. В данной ситуации нам подходит именно этот хук, в ином случае мы бы стали искать другой.

5.  У нас есть всё что бы получить нужные данные. 

    Выполним функцию ``fn_get_product_prices`` и получим данные о скидках.

    .. literalinclude:: files/hook_connect_2.php
        :linenos:   

    Результат:

    .. fancybox:: img/qty_disq_15.png
        :alt: Оптовые скидки

    Мы используем стандартную функцию из детальной страницы товара. Как видите функция расширила данные о товаре информацией о скидками. Информация о скидках записалась в ячейку ``['prices']`` так же как и в контроллере детальной страницы товара. Товары у которых нет оптовых цен не имеют ячейки ``['prices']``.

    Обратите внимание, что аргументы ``(&$product, &$auth, &$params)`` переданы в хук ссылками, поэтому изменения в хуке выходят наружу и влияют на работу всего скрипта.

6.  Убираем ``fn_print_r`` из хука и переносим его в контроллер **categories.php**, в то место где переменная ``$products`` передаётся на отображение. Делаем это, чтобы проверить появились ли данные о скидках вне модуля.  

    .. literalinclude:: files/hook_connect_3.php
        :linenos:

    Я передал на распечатку название и оптовые скидки первого по порядку товара в массиве ``$products``, потому что оптовые скидки в примере настроенны именно для этого товара.

    .. fancybox:: img/qty_disq_16.png
        :alt: Оптовые скидки

Отлично, данные о скидках получены.

Убираем все ``fn_print_r`` в функциях и контроллерах и переходим к шаблонам.

Оптовые скидки уже появились на странице списка товаров

.. list-table::
    :header-rows: 1
    :widths: 30 30

    *   -   Было

        -   Стало

    *   -   .. fancybox:: img/qty_disq_21.png
                :alt: Отображение опций товаров

        -   .. fancybox:: img/qty_disq_20.png
                :alt: Отображение опций товаров

Почему скидки появились сразу?
------------------------------

Всё дело в шаблонах, в шаблоне отвечающего за выбор количеств товара было условие: «Если есть информация об оптовых скидках, то отображаем». 


1.  Откроем детальную страницу товара и посмотрим код блока оптовых скидок в браузере:

    .. fancybox:: img/qty_disq_17.png
        :alt: Оптовые скидки

2.  Все шаблоны находятся в папке:

    ``/design/themes/[название_темы]/templates/``

    Сделаем поиск по файлам в папке c шаблонами, будем искать файл в котором встречается класс ``ty-qty-discount__table``, который использует таблица скидок. 

    Поиск нашёл всего один такой файл:

    ``/design/themes/[название_темы]/templates/views/products/components/products_qty_discounts.tpl``

    Откроем файл и добавим ``<p>Test</p>`` в любое место.

    Контрольная фраза появилась. Отлично. 

    .. fancybox:: img/qty_disq_18.png
        :alt: Оптовые скидки

3.  Найдём где подключается данный шаблон уровнем выше.

    Делаем поиск по файлам, ищем ``products/components/products_qty_discounts.tpl`` в папке с шаблонами. 

    Поиск находит всего один файл:

    ``/design/themes/[название_темы]/templates/common/product_data.tpl``

    Открываем данный файл и находим подключение нужного нам шаблона и условие:

    .. literalinclude:: files/template_1.tpl
        :linenos:
        :language: smarty

    Добавим ``<p>Test 1</p>``. 

    .. fancybox:: img/qty_disq_19.png
        :alt: Оптовые скидки    

    Шаблоны найдены, убираем все тесты. 

    Когда мы с помощью хука расширили информацию о товарах, добавив оптовые скидки, они сразу же появились, под блоком выбора товаров. 

Cкидки не появились сразу?
--------------------------

Попробуйте выключить параметры тестового товара.

Возможно ваш тестовый товар имеет параметры и комбинации параметров. В этом случае не отображается выбора количества товара, а именно в этом шаблоне срабатывает вывод оптовых скидок. Кроме того кнопка «Купить» заменяется на «Выберите параметры».

.. fancybox:: img/qty_disq_22.png
    :alt: Оптовые скидки    

Вы можете воспользоваться уроком :doc:`Отображение опций в списке </developer/solutions/catalog/show_options/index>`.

Спасибо! Если возникнут вопросы, пишите в комментариях.